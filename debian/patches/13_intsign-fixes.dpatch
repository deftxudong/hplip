#!/bin/sh /usr/share/dpatch/dpatch-run
## 13_intsign-fixes.dpatch by Henrique de Moraes Holschuh <hmh@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix signed/unsigned comparison issues

@DPATCH@
diff -urNad --exclude=CVS --exclude=.svn ./io/hpiod/system.cpp ./io/hpiod/system.cpp
--- ./io/hpiod/system.cpp	2005-09-17 00:43:39.000000000 -0300
+++ ./io/hpiod/system.cpp	2005-09-17 13:08:44.394282417 -0300
@@ -705,15 +705,14 @@
    return err;
 }
 
-int System::SetSnmp(char *ip, int port, char *szoid, int type, unsigned char *buffer, int size, int *pml_result, int *result)
+int System::SetSnmp(char *ip, int port, char *szoid, int type, unsigned char *buffer, unsigned int size, int *pml_result, int *result)
 {
    struct snmp_session session, *ss=NULL;
    struct snmp_pdu *pdu=NULL;
    struct snmp_pdu *response=NULL;
    oid anOID[MAX_OID_LEN];
    size_t anOID_len = MAX_OID_LEN;
-   int len=0;
-   unsigned int i;
+   unsigned int i, len=0;
    uint32_t val;
 
    *result = R_IO_ERROR;
@@ -738,7 +737,7 @@
       case PML_DT_ENUMERATION:
       case PML_DT_SIGNED_INTEGER:
          /* Convert PML big-endian to SNMP little-endian byte stream. */
-         for(i=0, val=0; i<(unsigned int)size && i<sizeof(val); i++)    
+         for(i=0, val=0; i<size && i<sizeof(val); i++)    
             val = ((val << 8) | buffer[i]);
          snmp_pdu_add_variable(pdu, anOID, anOID_len, ASN_INTEGER, (unsigned char *)&val, sizeof(val));
          break;
@@ -773,12 +772,12 @@
    return len;
 }
 
-int System::GetSnmp(char *ip, int port, char *szoid, unsigned char *buffer, int size, int *type, int *pml_result, int *result)
+int System::GetSnmp(char *ip, int port, char *szoid, unsigned char *buffer, unsigned int size, int *type, int *pml_result, int *result)
 {
    struct snmp_session session, *ss=NULL;
    struct snmp_pdu *pdu=NULL;
    struct snmp_pdu *response=NULL;
-   int i, len=0;
+   unsigned int i, len=0;
    oid anOID[MAX_OID_LEN];
    size_t anOID_len = MAX_OID_LEN;
    struct variable_list *vars;
@@ -817,7 +816,7 @@
             *type = PML_DT_SIGNED_INTEGER;
 
             /* Convert SNMP little-endian to PML big-endian byte stream. */
-            len = (sizeof(uint32_t) < (unsigned int)size) ? sizeof(uint32_t) : size;
+            len = (sizeof(uint32_t) < size) ? sizeof(uint32_t) : size;
             val = *vars->val.integer;
             for(i=len; i>0; i--)
             {
@@ -837,7 +836,7 @@
             break;
          case ASN_OCTET_STR:
             *type = PML_DT_STRING;
-            len = (vars->val_len < (unsigned int)size) ? vars->val_len : size;
+            len = (vars->val_len < size) ? vars->val_len : size;
             memcpy(buffer, vars->val.string, len);
             break;
          default:
diff -urNad --exclude=CVS --exclude=.svn ./io/hpiod/system.h ./io/hpiod/system.h
--- ./io/hpiod/system.h	2005-09-17 00:43:39.000000000 -0300
+++ ./io/hpiod/system.h	2005-09-17 13:08:44.398281893 -0300
@@ -74,8 +74,8 @@
    int DeviceCleanUp(SessionAttributes *sa);
    int SetPml(int device, int channel, char *snmp_iod, int type, unsigned char *data, int dataLen, char *sendBuf);
    int GetPml(int device, int channel, char *snmp_iod, char *sendBuf);
-   int GetSnmp(char *ip, int port, char *szoid, unsigned char *buffer, int size, int *type, int *pml_result, int *result);
-   int SetSnmp(char *ip, int port, char *szoid, int type, unsigned char *buffer, int size, int *pml_result, int *result);
+   int GetSnmp(char *ip, int port, char *szoid, unsigned char *buffer, unsigned int size, int *type, int *pml_result, int *result);
+   int SetSnmp(char *ip, int port, char *szoid, int type, unsigned char *buffer, unsigned int size, int *pml_result, int *result);
    int MakeUriFromIP(char *ip, int port, char *sendBuf);
    int MakeUriFromUsb(char *dnode, char *sendBuf);
    int MakeUriFromPar(char *dnode, char *sendBuf);
