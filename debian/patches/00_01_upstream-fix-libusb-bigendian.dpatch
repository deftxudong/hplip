#! /bin/sh /usr/share/dpatch/dpatch-run
## 00_01_upstream-fix-uneeded-htole.patch.dpatch by HPLIP upstream 1.6.12.8-rc3
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: libusb does not need hto* anymore

@DPATCH@
diff -urNad hplip~/io/hpiod/device.cpp hplip/io/hpiod/device.cpp
--- hplip~/io/hpiod/device.cpp	2006-10-17 12:28:12.000000000 -0300
+++ hplip/io/hpiod/device.cpp	2006-12-17 21:53:28.314932677 -0200
@@ -301,8 +301,8 @@
    len = usb_control_msg(hd, 
              USB_ENDPOINT_IN | USB_TYPE_VENDOR | USB_RECIP_INTERFACE, /* bmRequestType */
              USB_REQ_GET_STATUS,        /* bRequest */
-             htole16(value),        /* wValue */
-             htole16(interface), /* wIndex */
+             value,        /* wValue */
+             interface, /* wIndex */
              &byte, 1, LIBUSB_CONTROL_REQ_TIMEOUT);
 
    if (len != 1)
@@ -355,28 +355,28 @@
       len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x0758),        /* wValue */
+             0x0758,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
       /* Turn off RLE in auto ECP mode. */
       len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x0a1d),        /* wValue */
+             0x0a1d,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
       /* Place 725 chip in auto ECP mode. */
       len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x0759),        /* wValue */
+             0x0759,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
       /* Force negotiation. */
       len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x0817),        /* wValue */
+             0x0817,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
       /* Read register values. */
@@ -396,7 +396,7 @@
    len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x05ce),        /* wValue */
+             0x05ce,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
    Write(fd, &nullByte, 1);
@@ -405,7 +405,7 @@
    len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x05cd),        /* wValue */
+             0x05cd,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
 
@@ -432,7 +432,7 @@
    len = usb_control_msg(hd, 
              USB_ENDPOINT_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, /* bmRequestType */
              0x04,        /* bRequest */
-             htole16(0x080f),        /* wValue */
+             0x080f,        /* wValue */
              0, /* wIndex */
              NULL, 0, LIBUSB_CONTROL_REQ_TIMEOUT);
    if (len < 0)
@@ -762,8 +762,8 @@
    rlen = usb_control_msg(hd, 
              USB_ENDPOINT_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE, /* bmRequestType */
              USB_REQ_GET_STATUS,        /* bRequest */
-             htole16(0),        /* wValue */
-             htole16(interface), /* wIndex */
+             0,        /* wValue */
+             interface, /* wIndex */
              buffer, maxSize, LIBUSB_CONTROL_REQ_TIMEOUT);
 
    if (rlen < 0)
@@ -809,8 +809,8 @@
    len = usb_control_msg(hd, 
              USB_ENDPOINT_IN | USB_TYPE_CLASS | USB_RECIP_INTERFACE, /* bmRequestType */
              USB_REQ_CLEAR_FEATURE,        /* bRequest */
-             htole16(0),        /* wValue */
-             htole16(interface), /* wIndex */
+             0,        /* wValue */
+             interface, /* wIndex */
              &byte, 1, LIBUSB_CONTROL_REQ_TIMEOUT);
 
    if (len < 0)
