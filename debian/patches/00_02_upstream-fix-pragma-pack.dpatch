#! /bin/sh /usr/share/dpatch/dpatch-run
## 00_02_upstream-fix-pragma-pack.dpatch by HPLIP upstream 1.6.12.8-rc3
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix use of pragma pack to attribute packed

@DPATCH@
diff -urNad hplip~/io/hpiod/dot4.h hplip/io/hpiod/dot4.h
--- hplip~/io/hpiod/dot4.h	2005-10-13 16:24:09.000000000 -0300
+++ hplip/io/hpiod/dot4.h	2006-12-18 10:23:12.167840412 -0200
@@ -39,7 +39,10 @@
   DOT4_ERROR = MLC_ERROR
 };
 
-#pragma pack(1)
+/*
+ * Note, following structures must be packed. The "pragma pack" statement is not recognized by all gcc compilers (ie: ARM based),
+ * so we use __attribute__((packed)) instead.
+ */
 
 typedef struct
 {
@@ -48,14 +51,14 @@
    unsigned short length;   /* packet length (includes header) */ 
    unsigned char credit;   /* data packet credit, reserved if command */
    unsigned char control;  /* bit field: 0=normal */
-} DOT4Header;
+} __attribute__((packed)) DOT4Header;
 
 typedef struct
 {
    DOT4Header h;
    unsigned char cmd;
    unsigned char rev;
-} DOT4Init;
+} __attribute__((packed)) DOT4Init;
 
 typedef struct
 {
@@ -63,20 +66,20 @@
    unsigned char cmd;
    unsigned char result;
    unsigned char rev;
-} DOT4InitReply;
+} __attribute__((packed)) DOT4InitReply;
 
 typedef struct
 {
    DOT4Header h;
    unsigned char cmd;
-} DOT4Exit;
+} __attribute__((packed)) DOT4Exit;
 
 typedef struct
 {
    DOT4Header h;
    unsigned char cmd;
    unsigned char result;
-} DOT4ExitReply;
+} __attribute__((packed)) DOT4ExitReply;
 
 typedef struct
 {
@@ -87,7 +90,7 @@
    unsigned short maxp2s;      /* max primary to secondary packet size in bytes */
    unsigned short maxs2p;      /* max secondary to primary packet size in bytes */
    unsigned short maxcredit;   /* max outstanding credit */
-} DOT4OpenChannel;
+} __attribute__((packed)) DOT4OpenChannel;
 
 typedef struct
 {
@@ -100,7 +103,7 @@
    unsigned short maxs2p;      /* max secondary to primary packet size in bytes */
    unsigned short maxcredit;   /* max outstanding credit */
    unsigned short credit;
-} DOT4OpenChannelReply;
+} __attribute__((packed)) DOT4OpenChannelReply;
 
 typedef struct
 {
@@ -108,7 +111,7 @@
    unsigned char cmd;
    unsigned char psocket;      /* primary socket id */
    unsigned char ssocket;      /* secondary socket id */
-} DOT4CloseChannel;
+} __attribute__((packed)) DOT4CloseChannel;
 
 typedef struct
 {
@@ -117,7 +120,7 @@
    unsigned char result;
    unsigned char psocket;      /* primary socket id */
    unsigned char ssocket;      /* secondary socket id */
-} DOT4CloseChannelReply;
+} __attribute__((packed)) DOT4CloseChannelReply;
 
 typedef struct
 {
@@ -125,7 +128,7 @@
    unsigned char cmd;
    unsigned char result;
    unsigned char socket;
-} DOT4GetSocketReply; 
+} __attribute__((packed)) DOT4GetSocketReply; 
 
 typedef struct
 {
@@ -134,7 +137,7 @@
    unsigned char psocket;
    unsigned char ssocket;
    unsigned short credit;    /* credit for sender */ 
-} DOT4Credit; 
+} __attribute__((packed)) DOT4Credit; 
 
 typedef struct
 {
@@ -143,7 +146,7 @@
    unsigned char psocket;
    unsigned char ssocket;
    unsigned short maxcredit;   /* maximum outstanding credit */
-} DOT4CreditRequest; 
+} __attribute__((packed)) DOT4CreditRequest; 
 
 typedef struct
 {
@@ -153,7 +156,7 @@
    unsigned char psocket;
    unsigned char ssocket;
    unsigned short credit;   /* credit for sender */
-} DOT4CreditRequestReply; 
+} __attribute__((packed)) DOT4CreditRequestReply; 
 
 typedef struct
 {
@@ -162,14 +165,12 @@
    unsigned char psocket;     /* primary socket id which contains the error */
    unsigned char ssocket;     /* secondary socket id which contains the error */
    unsigned char error;
-} DOT4Error; 
+} __attribute__((packed)) DOT4Error; 
 
 typedef DOT4ExitReply DOT4Reply;
 typedef DOT4Exit DOT4Cmd;
 typedef DOT4CloseChannelReply DOT4CreditReply;
 typedef DOT4Exit DOT4GetSocket;
 
-#pragma pack()
-
 #endif // _DOT4_H
 
diff -urNad hplip~/io/hpiod/mlc.h hplip/io/hpiod/mlc.h
--- hplip~/io/hpiod/mlc.h	2005-07-21 16:28:24.000000000 -0300
+++ hplip/io/hpiod/mlc.h	2006-12-18 10:23:12.168840292 -0200
@@ -40,8 +40,6 @@
   MLC_ERROR = 0x7f
 };
 
-#pragma pack(1)
-
 typedef struct
 {
    unsigned char hsid;   /* host socket id */
@@ -49,14 +47,14 @@
    unsigned short length;   /* packet length (includes header) */ 
    unsigned char credit;   /* data packet credit, reserved if command */
    unsigned char status;  /* upper layer status */
-} MLCHeader;
+} __attribute__((packed)) MLCHeader;
 
 typedef struct
 {
    MLCHeader h;
    unsigned char cmd;
    unsigned char rev;
-} MLCInit;
+} __attribute__((packed)) MLCInit;
 
 typedef struct
 {
@@ -64,20 +62,20 @@
    unsigned char cmd;
    unsigned char result;
    unsigned char rev;
-} MLCInitReply;
+} __attribute__((packed)) MLCInitReply;
 
 typedef struct
 {
    MLCHeader h;
    unsigned char cmd;
-} MLCExit;
+} __attribute__((packed)) MLCExit;
 
 typedef struct
 {
    MLCHeader h;
    unsigned char cmd;
    unsigned char result;
-} MLCExitReply;
+} __attribute__((packed)) MLCExitReply;
 
 typedef struct
 {
@@ -87,7 +85,7 @@
    unsigned short h2psize;    /* host-to-peripheral packet size */
    unsigned short p2hsize;    /* peripheral-to-host packet size */
    unsigned char status;      /* status level */
-} MLCConfigSocket;
+} __attribute__((packed)) MLCConfigSocket;
 
 typedef struct
 {
@@ -97,7 +95,7 @@
    unsigned short h2psize;    /* host-to-peripheral packet size */
    unsigned short p2hsize;    /* peripheral-to-host packet size */
    unsigned char status;      /* status level */
-} MLCConfigSocketReply;
+} __attribute__((packed)) MLCConfigSocketReply;
 
 typedef struct
 {
@@ -106,7 +104,7 @@
    unsigned char hsocket;      /* host socket id */
    unsigned char psocket;      /* peripheral socket id */
    unsigned short credit;
-} MLCOpenChannel;
+} __attribute__((packed)) MLCOpenChannel;
 
 typedef struct
 {
@@ -114,7 +112,7 @@
    unsigned char cmd;
    unsigned char result;
    unsigned short credit;
-} MLCOpenChannelReply;
+} __attribute__((packed)) MLCOpenChannelReply;
 
 typedef struct
 {
@@ -122,7 +120,7 @@
    unsigned char cmd;
    unsigned char hsocket;      /* host socket id */
    unsigned char psocket;      /* peripheral socket id */
-} MLCCloseChannel;
+} __attribute__((packed)) MLCCloseChannel;
 
 typedef MLCExitReply MLCCloseChannelReply;
 typedef MLCExitReply MLCReply;
@@ -133,7 +131,5 @@
 typedef MLCOpenChannelReply MLCCreditRequestReply;
 typedef MLCExitReply MLCError;
 
-#pragma pack()
-
 #endif // _MLC_H
 
diff -urNad hplip~/ip/hpip.h hplip/ip/hpip.h
--- hplip~/ip/hpip.h	2004-12-15 22:13:19.000000000 -0200
+++ hplip/ip/hpip.h	2006-12-18 10:23:12.168840292 -0200
@@ -72,15 +72,11 @@
 typedef void VOID, *PVOID, FAR *LPVOID;
 typedef long long int __int64;
 
-#pragma pack(1)
-
 typedef struct {
 	BYTE rgbRed:8;
 	BYTE rgbGreen:8;
 	BYTE rgbBlue:8;
-} RGBQUAD;
-
-#pragma pack()
+} __attribute__((packed)) RGBQUAD;
 
 /****************************************************************************\
  ****************************************************************************
@@ -732,7 +728,6 @@
 
 /* aXformInfo[IP_HEADER_SPEC] shall be a pointer pointing to this: */
 
-#pragma pack (1)
 typedef struct {
     PSTR    pszLeftStr;    // ptr to left-justified string; 0 -> none
     PSTR    pszCenterStr;  // ptr to centered string; 0 -> none
@@ -744,8 +739,7 @@
     BOOL    bOverlay;      // 0=append header, 1=overlay it on top of page
     RGBQUAD rgbWhite;      // a white pixel
     RGBQUAD rgbBlack;      // a black pixel
-} XHEADER_SPEC, *PXHEADER_SPEC, FAR*LPXHEADER_SPEC;
-#pragma pack ()
+} __attribute__((packed)) XHEADER_SPEC, *PXHEADER_SPEC, FAR*LPXHEADER_SPEC;
 
 /* A header is one line of text appearing at the top of faxes.  This is known
  * as a "TTI" in faxland.  We implement this as a left-justified portion, a
diff -urNad hplip~/ip/xtiff.c hplip/ip/xtiff.c
--- hplip~/ip/xtiff.c	2005-03-29 21:36:32.000000000 -0300
+++ hplip/ip/xtiff.c	2006-12-18 10:23:12.169840172 -0200
@@ -190,37 +190,36 @@
 #define XRESOLUTION           282    // 0x011A
 #define YRESOLUTION           283    // 0x011B
 
-#pragma pack(1)
 typedef struct {
      TIFF_ULONG n;
      TIFF_ULONG d;
-} RATIONAL;
+} __attribute__((packed)) RATIONAL;
 
 typedef union {
      TIFF_UBYTE  b[4];
      TIFF_USHORT s[2];
      TIFF_ULONG  l;
      TIFF_ULONG  o;
-} TIFFVALUE;
+} __attribute__((packed)) TIFFVALUE;
 
 typedef struct {
      TIFF_USHORT TagID;
      TIFF_USHORT Kind;
      TIFF_ULONG  Length;  /* number of items, NOT number of bytes */
      TIFFVALUE   Value;
-} TIFFTAG;
+} __attribute__((packed)) TIFFTAG;
 
 typedef struct {
     TIFF_USHORT NumTags;
     TIFFTAG     Tag[NUMTAGS];
     TIFF_ULONG  OffsetNextIFD;
-} TIFFIFD;
+} __attribute__((packed)) TIFFIFD;
 
 typedef struct {
     TIFF_UBYTE    ByteOrder[2];
     TIFF_USHORT    Version;
     TIFF_ULONG    OffsetFirstIFD;
-} TIFFHEADER;
+} __attribute__((packed)) TIFFHEADER;
 
 #define NUMEXTBYTES (2*sizeof(RATIONAL) + 3*sizeof(TIFF_USHORT))
 #define MAX_HEADER_SIZE (sizeof(TIFFHEADER) + sizeof(TIFFIFD) + NUMEXTBYTES)
diff -urNad hplip~/pcard/fat.c hplip/pcard/fat.c
--- hplip~/pcard/fat.c	2005-09-09 18:49:18.000000000 -0300
+++ hplip/pcard/fat.c	2006-12-18 10:23:12.169840172 -0200
@@ -75,8 +75,6 @@
    int DirEntryNum;           /* number in current directory */
 } CURRENT_FILE_ATTRIBUTES;
 
-#pragma pack(1)
-
 typedef struct
 {
    char JumpInstruction[3];      /* offset = 0 */
@@ -101,7 +99,7 @@
    uint8_t SystemID[8];     /* 54 */
    uint8_t LoadInstructions[512-64];
    uint16_t EndSignature; /*=AA55h*/
-} FAT_BOOT_SECTOR;       /* 512 bytes total */
+} __attribute__((packed)) FAT_BOOT_SECTOR;       /* 512 bytes total */
 
 typedef struct
 {
@@ -112,9 +110,7 @@
    uint16_t Date; 
    uint16_t StartCluster;       
    uint32_t Size;      /* size of the file in bytes */ 
-} FAT_DIRECTORY;      /* 32 bytes total */
-
-#pragma pack()
+} __attribute__((packed)) FAT_DIRECTORY;      /* 32 bytes total */
 
 #define FAT_IS_DIR 0x10
 #define FAT_END_OF_DIR 0x2
diff -urNad hplip~/pcard/ptest.c hplip/pcard/ptest.c
--- hplip~/pcard/ptest.c	2006-03-09 16:27:14.000000000 -0300
+++ hplip/pcard/ptest.c	2006-12-18 10:25:29.913280310 -0200
@@ -43,28 +43,24 @@
 
 #define DEV_ACK 0x0100
 
-#pragma pack(1)
-
 typedef struct
 {
    short cmd;
    unsigned short nsector;
-} CMD_READ_REQUEST;
+} __attribute__((packed)) CMD_READ_REQUEST;
 
 typedef struct{
    short cmd;
    unsigned short nsector;
    short cs;         /* check sum is not used */
-} CMD_WRITE_REQUEST;
+} __attribute__((packed)) CMD_WRITE_REQUEST;
 
 typedef struct
 {
    short cmd;
    uint32_t nsector;
    short ver;
-} RESPONSE_SECTOR;
-
-#pragma pack()
+} __attribute__((packed)) RESPONSE_SECTOR;
 
 static int hd=-1, channel=-1;
 
diff -urNad hplip~/scan/sane/mfpdtf.h hplip/scan/sane/mfpdtf.h
--- hplip~/scan/sane/mfpdtf.h	2005-09-20 15:19:08.000000000 -0300
+++ hplip/scan/sane/mfpdtf.h	2006-12-18 10:23:12.169840172 -0200
@@ -34,6 +34,7 @@
 #include <fcntl.h>
 #include <unistd.h>
 #include <string.h>
+#include <stdint.h>
 
 
 enum MfpdtfImageRecordID_e { MFPDTF_ID_START_PAGE = 0,
@@ -301,8 +302,6 @@
    ID_END_PAGE = 2
 };
 
-#pragma pack(1)
-
 /* All words are stored little endian. */
 
 typedef struct
@@ -311,7 +310,7 @@
    uint16_t HeaderLength;  /* in bytes */
    uint8_t DataType;
    uint8_t PageFlag;      
-} MFPDTF_FIXED_HEADER;
+} __attribute__((packed)) MFPDTF_FIXED_HEADER;
 
 typedef struct
 {
@@ -328,14 +327,14 @@
    uint32_t CMYRows;
    uint32_t CMYHorzDPI;
    uint32_t CMYVertDPI;
-} MFPDTF_START_PAGE;
+} __attribute__((packed)) MFPDTF_START_PAGE;
 
 typedef struct
 {
    uint8_t ID;
    uint8_t dummy;
    uint16_t Size;    /* in bytes */
-} MFPDTF_RASTER;
+} __attribute__((packed)) MFPDTF_RASTER;
 
 typedef struct
 {
@@ -343,9 +342,7 @@
    char dummy[3];
    uint32_t BlackRows;
    uint32_t CMYRows;
-} MFPDTF_END_PAGE;
-
-#pragma pack()  
+} __attribute__((packed)) MFPDTF_END_PAGE;
 
 #if defined(WORDS_BIGENDIAN)
 #define htole16(A) ((((uint16_t)(A) & 0xff00) >> 8) | (((uint16_t)(A) & 0x00ff) << 8))    /* host to little-endian 16-bit value */
