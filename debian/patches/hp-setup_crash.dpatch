#! /bin/sh /usr/share/dpatch/dpatch-run
## hp-setup_crash.dpatch by  <till.kamppeter@gmail.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad hplip-2.8.2~/prnt/cups.py hplip-2.8.2/prnt/cups.py
--- hplip-2.8.2~/prnt/cups.py	2008-01-29 21:52:11.000000000 +0100
+++ hplip-2.8.2/prnt/cups.py	2008-03-13 12:15:47.000000000 +0100
@@ -225,26 +225,35 @@
         for ppd in ppd_dict:
             if 'hp-' in ppd.lower() or 'hp_' in ppd.lower() and \
                 ppd_dict[ppd]['ppd-make'] == 'HP':
-                
+
                 desc = ppd_dict[ppd]['ppd-make-and-model']
                 #print ppd, desc
-                
+
                 if not ('foo2' in desc.lower() or 
                         'gutenprint' in desc.lower() or 
                         'gutenprint' in ppd):
-                        
+
                     # PPD files returned by CUPS_GET_PPDS (and by lpinfo -m)
                     # can be relative to /usr/share/ppd/ or to 
                     # /usr/share/cups/model/. Not sure why this is.
                     # Here we will try both and see which one it is...
-                    path = os.path.join(foomatic_ppd_path, ppd)
-                    
-                    if not os.path.exists(path):
-                        path = os.path.join(cups_ppd_path, ppd)
-                        
-                        if not os.path.exists(path):
-                            path = ppd # foomatic: or some other driver
-    
+                    if os.path.exists(ppd):
+                        path = ppd
+                    else:
+                        try:
+                            path = os.path.join(foomatic_ppd_path, ppd)
+                        except AttributeError:
+                            path = ppd
+                        else:
+                            if not os.path.exists(path):
+                                try:
+                                    path = os.path.join(cups_ppd_path, ppd)
+                                except AttributeError:
+                                    path = ppd
+                                else:
+                                    if not os.path.exists(path):
+                                        path = ppd
+
                     ppds[path] = desc
                     log.debug("%s: %s" % (path, desc))
 
diff -urNad hplip-2.8.2~/setup.py hplip-2.8.2/setup.py
--- hplip-2.8.2~/setup.py	2008-02-06 20:19:16.000000000 +0100
+++ hplip-2.8.2/setup.py	2008-03-13 12:15:47.000000000 +0100
@@ -799,6 +799,8 @@
             status, status_str = cups.addPrinter(printer_name, print_uri,
                 location, print_ppd, '', info)
 
+        log.debug("addPrinter() returned (%d, %s)" % (status, status_str))
+
         installed_print_devices = device.getSupportedCUPSDevices(['hp']) 
 
         log.debug(installed_print_devices)
@@ -939,7 +941,14 @@
         log.info("Location: %s" % location)
         log.info("Information: %s" % info)
 
-        cups.addPrinter(fax_name, fax_uri, location, fax_ppd, "", info)
+        if not os.path.exists(fax_ppd): # assume foomatic: or some such
+            status, status_str = cups.addPrinter(fax_name.encode('utf8'), fax_uri,
+                location, '', fax_ppd, info)
+        else:
+            status, status_str = cups.addPrinter(fax_name.encode('utf8'), fax_uri,
+                location, fax_ppd, '', info)
+
+        log.debug("addPrinter() returned (%d, %s)" % (status, status_str))
 
         installed_fax_devices = device.getSupportedCUPSDevices(['hpfax']) 
 
diff -urNad hplip-2.8.2~/ui/setupform.py hplip-2.8.2/ui/setupform.py
--- hplip-2.8.2~/ui/setupform.py	2008-01-17 01:54:02.000000000 +0100
+++ hplip-2.8.2/ui/setupform.py	2008-03-13 12:15:47.000000000 +0100
@@ -82,7 +82,7 @@
         if not input:
             return QValidator.Acceptable, pos
 
-        elif input[pos-1] in u"""~`!@#$%^&*()-=+[]{}()\\/,.<>?'\";:|""":     
+        elif input[pos-1] in u"""~`!@#$%^&*()-=+[]{}()\\/,.<>?'\";:| """:     
             return QValidator.Invalid, pos
 
         # TODO: How to determine if unicode char is "printable" and acceptable
@@ -861,7 +861,7 @@
 
         #if self.ppd_file.startswith("foomatic:"):
         if not os.path.exists(self.ppd_file): # assume foomatic: or some such
-            status, status_str = cups.addPrinter(self.printer_name, self.device_uri,
+            status, status_str = cups.addPrinter(self.printer_name.encode('utf8'), self.device_uri,
                 self.location, '', self.ppd_file, self.desc)
         else:
             status, status_str = cups.addPrinter(self.printer_name.encode('utf8'), self.device_uri,
@@ -934,9 +934,13 @@
             else: # Quit
                 return
 
-        status, status_str = cups.addPrinter(self.fax_name.encode('utf8'), 
-            self.fax_uri, self.fax_location, fax_ppd, '', self.fax_desc)
-            
+        if not os.path.exists(fax_ppd):
+            status, status_str = cups.addPrinter(self.fax_name.encode('utf8'), 
+                self.fax_uri, self.fax_location, '', fax_ppd,  self.fax_desc)
+        else:
+            status, status_str = cups.addPrinter(self.fax_name.encode('utf8'), 
+                self.fax_uri, self.fax_location, fax_ppd, '', self.fax_desc)
+
         log.debug("addPrinter() returned (%d, %s)" % (status, status_str))
         self.installed_fax_devices = device.getSupportedCUPSDevices(['hpfax'])
 
