#! /bin/sh
# postrm script for hplip-base
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Kill any pre-compiled python crap
kill_python_crappage() {
	[ -d /usr/lib/hplip ] && \
		find /usr/lib/hplip \
			\( -name '*.pyc' -o -name '*.pyo' \) \
			-exec rm -f {} \;
	:
}

case "$1" in
	abort-install|abort-upgrade)
	;;
	upgrade)
	;;
	remove|failed-upgrade|disappear)
		kill_python_crappage
        ;;
	purge)
		kill_python_crappage

		for i in /var/run/hplip ; do
			dpkg-statoverride --remove $i || true
		done

		getent passwd hplip >/dev/null && \
			deluser --quiet --system hplip
		getent group hplip >/dev/null && \
			delgroup hplip

    		[ -d /var/run/hplip ] && rm -fr /var/run/hplip
	;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
