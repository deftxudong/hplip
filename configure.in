#
#  configure.in - hplip autoconf input file
#
#  (c) 2004-2005 Copyright Hewlett-Packard Development Company, LP
#  Copyright (c) 2005 Henrique de Moraes Holschuh <hmh@debian.org>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#

AC_PREREQ([2.59])
AC_INIT([HP Linux Imaging and Printing],
	[0.9.9],
	[hplip@packages.debian.org],
	[hplip])

AC_COPYRIGHT(
[Copyright (c) 2004-2005 Hewlett-Packard Development Company, LP
Copyright (c) 2005 Henrique de Moraes Holschuh <hmh@debian.org> and others
This configure script is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
])

AC_CONFIG_SRCDIR([io/hpiod/hpiod.cpp])
AC_CONFIG_AUX_DIR([.])
AM_INIT_AUTOMAKE([1.9 foreign])
AM_MAINTAINER_MODE
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AC_CONFIG_SUBDIRS([prnt/hpijs])

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL

AC_ARG_VAR([PYTHON], [Python interpreter/compiler command])
AM_PATH_PYTHON([2.3])

AC_ARG_VAR([PYUIC], [PyQT pyuic .ui to .py compiler command])
AC_CHECK_TOOLS([PYUIC], [pyuic])

AC_ARG_VAR([CHKCONFIG], [LSB chkconfig utility])
AC_PATH_TOOL([CHKCONFIG], [chkconfig],, [$PATH:/usr/lib/usb])

AC_ARG_VAR([INSTALLINITD], [LSB install_initd utility])
AC_PATH_TOOL([INSTALLINITD], [install_initd],, [$PATH:/usr/lib/usb])

# Checks for libraries
#   HPLIP needs: libpthread, libsocket(solaris), libnsl(solaris)
#         may need: libsnmp (--network build)
#
#   libsnmp may need (on broken systems): libcrypto
#

# For Solaris
AC_CHECK_FUNC([gethostent],,
	[AC_CHECK_LIB([nsl], [gethostent],,
		[AC_MSG_ERROR([Cannot find required nameserver functions])]
	)]
)
AC_CHECK_FUNC([setsockopt],,
	[AC_CHECK_LIB([socket], [setsockopt],,
		[AC_MSG_ERROR([Cannot find required socket functions])]
	)]
)

# Pthread
AC_CHECK_LIB([pthread], [pthread_create],,
	[AC_MSG_ERROR([pthread libraries not found])]
)

# Netsnmp
dnl not used by HPLIP, only needed on systems with broken ld.so or for
dnl static linking.  If you know of any, add it inside the libsnmp=yes clause
dnl AC_CHECK_LIB([crypto], [CRYPTO_free])
AC_CHECK_LIB([netsnmp], [snmp_timeout], [libsnmp=yes], [libsnmp=no])
AC_CHECK_LIB([usb], [usb_init],, [AC_MSG_ERROR([cannot find libusb support])])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADER([cups/cups.h],
   [],
   [AC_MSG_ERROR([cannot find cups-devel support])]
)
AC_CHECK_HEADER([net-snmp/net-snmp-config.h], [snmpdevel=yes], [snmpdevel=no])
AC_CHECK_HEADER([python${PYTHON_VERSION}/Python.h],
   [],
   [AC_MSG_ERROR([cannot find python-devel support for python ${PYVERSION}])]
)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN

# Options
AC_MSG_CHECKING([for rpm install])
AC_ARG_ENABLE([rpm-install],
	AS_HELP_STRING([--enable-rpm-install],
		[enable rpm install (default=no)]),
	[RPM_INSTALL="$enableval"], [RPM_INSTALL=no]
)
AS_IF([test "$RPM_INSTALL" != "no"],
	[AC_MSG_RESULT([yes])],
	[AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([for network build])
AC_ARG_ENABLE([network-build],
	AS_HELP_STRING([--enable-network-build],
		[enable network build (default=yes)]),
	[network_build="$enableval"], [network_build=yes])
AS_IF([test "$network_build" = "yes"],
	[AC_MSG_RESULT([yes])],
	[AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([whether to support parallel port IO])
AC_ARG_ENABLE([pp_build],
	AS_HELP_STRING([--enable-pp-build],
		[support parallel port IO (default=yes)]),
	[pp_build="$enableval"], [pp_build=yes])
AS_IF([test "$pp_build" = "yes"],
   [AC_MSG_RESULT([yes])
    AC_DEFINE(HAVE_PPORT)],
   [AC_MSG_RESULT([no])]
)

CUPSSEARCHPATH="/usr/share /usr/local/share /usr/lib /usr/local/lib /usr/libexec /usr/lib64 /opt"

AC_ARG_VAR([CUPS_BACKEND_PATH], [CUPS backend directory])
AC_MSG_CHECKING([for cups backend path])
AS_IF([test "x${CUPS_BACKEND_PATH}" = "x"],
	[
	CUPS_BACKEND_PATH="/usr/lib/cups/backend"
	for i in $CUPSSEARCHPATH; do
	   if test -d "$i/cups/backend"; then
	      CUPS_BACKEND_PATH="$i/cups/backend"
	      break
	   fi
	done
	]
)
AC_MSG_RESULT([using ${CUPS_BACKEND_PATH}])

AC_ARG_VAR([HPLIP_PPD_PATH], [HPLIP ppd directory])
AC_MSG_CHECKING([for HPLIP ppd path])
AS_IF([test "x${HPLIP_PPD_PATH}" = "x"],
	[HPLIP_PPD_PATH="\${datadir}/ppd/HP"]
)
AC_MSG_RESULT([using ${HPLIP_PPD_PATH}])

ICONSEARCHPATH="/usr/lib/menu /usr/share/applications"
ICONFILETYPES="hplip hplip.desktop"

AC_MSG_CHECKING([for icon/menu/desktop file install])
ICON_PATH=""
ICON_FILE=""
AC_ARG_WITH([icon],
	AS_HELP_STRING([--with-icon@<:@=path@:>@],
		[Where to install menu/desktop file (default=yes (autodetect))]),
	[
	AS_IF([test "x$withval" != "xyes" || test "x$withval" = "x"],
		[
		DO_ICON_AUTODETECT="no"
		AS_IF([test "x$withval" != "xno"],
			[
			ICON_FILE=$(basename "${withval}")
			ICON_PATH="${withval%${ICON_FILE}}"
			],
		)
		],
		[DO_ICON_AUTODETECT="yes"]
	)
	],
	[DO_ICON_AUTODETECT="yes"]
)
AS_IF([test "x${DO_ICON_AUTODETECT}" = "xyes"],
	[
	idx=1
	for i in ${ICONSEARCHPATH}; do
	   if test -d "$i"; then
	      ICON_PATH="$i"
	      jdx=1
	      for j in ${ICONFILETYPES}; do
	         if test "$jdx" = "$idx"; then
	            break
	         fi
	         jdx=$jdx+1
	      done
	      ICON_FILE="$j"
	      break
	   fi
	   idx=$idx+1
	done
	])
AS_IF([test "x${ICON_PATH}${ICON_FILE}" != "x"],
   [AC_MSG_RESULT([using ${ICON_PATH}/${ICON_FILE}])],
   [AC_MSG_RESULT([none])]
)

if test "x$network_build" = "xyes"; then
   if test "x$libsnmp" = "xno"; then
      AC_MSG_ERROR([cannot find net-snmp support (or --disable-network-build)])
   fi
   if test "x$snmpdevel" = "xno"; then
      AC_MSG_ERROR([cannot find net-snmp-devel support (or --disable-network-build)])
   fi
   AC_DEFINE(HAVE_LIBSNMP)
   LIBS="-lnetsnmp $LIBS"
fi

dnl This is non-standard, and may break
ac_configure_args="$ac_configure_args --enable-hplip-build"

AC_SUBST(RPM_INSTALL)
AC_SUBST(network_build)
AC_SUBST(pp_build)
AC_SUBST(ICON_PATH)
AC_SUBST(ICON_FILE)

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
