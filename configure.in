#
#  configure.in - hplip autoconf input file
# 
#  (c) 2004-2005 Copyright Hewlett-Packard Development Company, LP
#

AC_INIT(io/hpiod/hpiod.cpp)
AM_INIT_AUTOMAKE(hplip, 0.9.1)
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
#AC_PROG_MAKE_SET
#AC_CONFIG_SUBDIRS(prnt prnt/hpijs io/hpiod backend/hp base data scan ui ip scan/sane pcard)
AC_CONFIG_SUBDIRS(prnt/hpijs)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL

# Checks for libraries, sets -lpthread, -lcrypto, -lnetsnmp for LIBS and HAVE_LIBSNMP.
AC_CHECK_LIB([pthread], [pthread_create])
AC_CHECK_LIB([crypto], [CRYPTO_free])
AC_CHECK_LIB([netsnmp], [snmp_timeout], [libsnmp=yes], [libsnmp=no])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(cups/cups.h, ,[AC_MSG_ERROR([cannot find cups-devel support])])
AC_CHECK_HEADERS(net-snmp/net-snmp-config.h, snmpdevel=yes, snmpdevel=no)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN

BINSEARCHPATH="/bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin /usr/lib/lsb"

AC_MSG_CHECKING([for chkconfig])
CHKCONFIG_PATH=""
for i in $BINSEARCHPATH; do
   if test -e "$i/chkconfig"; then
      CHKCONFIG_PATH="$i"
      break
   fi
done
if test "$CHKCONFIG_PATH" != ""; then
   AC_MSG_RESULT([found in $CHKCONFIG_PATH])
else
   AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING([for install_initd])
LSB_INSTALL_PATH=""
for i in $BINSEARCHPATH; do
   if test -e "$i/install_initd"; then
      LSB_INSTALL_PATH="$i"
      break
   fi
done
if test "$LSB_INSTALL_PATH" != ""; then
   AC_MSG_RESULT([found in $LSB_INSTALL_PATH])
else
   AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING([for rpm install])
AC_ARG_ENABLE(rpm_install,
  [  --enable-rpm-install    enable rpm install (default=no)],
  rpm_install=$enableval, rpm_install=no)
if test "$rpm_install" = "yes"; then
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING([for network build])
AC_ARG_ENABLE(network_build,
  [  --enable-network-build    enable network build (default=yes)],
  network_build=$enableval, network_build=yes)
if test "$network_build" = "yes"; then
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

CUPSSEARCHPATH="/usr/share /usr/local/share /usr/lib /usr/local/lib /usr/libexec /usr/lib64 /opt"

AC_MSG_CHECKING("for cups backend path")
CUPS_BACKEND_PATH="/usr/lib/cups/backend"
for i in $CUPSSEARCHPATH; do
   if test -d "$i/cups/backend"; then
      CUPS_BACKEND_PATH="$i/cups/backend"
      break
   fi
done
AC_MSG_RESULT("using $CUPS_BACKEND_PATH")

ICONSEARCHPATH="/usr/lib/menu /usr/share/applications"
ICON="hplip hplip.desktop"

AC_MSG_CHECKING("for icon directory")
ICON_PATH=""
ICON_FILE=""
idx=1
for i in $ICONSEARCHPATH; do
   if test -d "$i"; then
      ICON_PATH="$i"
      jdx=1
      for j in $ICON; do
         if test "$jdx" = "$idx"; then
            break
         fi
         jdx=$jdx=1
      done
      ICON_FILE="$j"
      break
   fi
   idx=$idx+1
done
if test "$ICON_PATH" != ""; then
   AC_MSG_RESULT("using $ICON_PATH/$ICON_FILE")
else
   AC_MSG_RESULT("no")
fi

if test "$network_build" = "yes"; then
   if test "$libsnmp" = "no"; then
      AC_MSG_ERROR([cannot find net-snmp support])
   fi
   if test "$snmpdevel" = "no"; then
      AC_MSG_ERROR([cannot find net-snmp-devel support])
   fi
   AC_DEFINE(HAVE_LIBSNMP) 
   LIBS="-lnetsnmp $LIBS"
fi

PYTHONSEARCHPATH="python python2.2 python2.3 python2.4"

for i in $PYTHONSEARCHPATH; do
   AC_CHECK_HEADERS("$i/Python.h", python=yes, python=no)
   if test "$python" = "yes"; then
      break
   fi
done
if test "$python" = "no"; then
   AC_MSG_ERROR([cannot find python-devel support])
fi

AC_SUBST(CHKCONFIG_PATH)
AC_SUBST(LSB_INSTALL_PATH)
AC_SUBST(rpm_install)
AC_SUBST(CUPS_BACKEND_PATH)
AC_SUBST(ICON_PATH)
AC_SUBST(ICON_FILE)

AC_OUTPUT(Makefile)
